---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import HeroSection from '../components/HeroSection.astro';
import { allFaqs } from '../data/faqs.js'; // Import the FAQ data

// --- Data Processing ---

// Define the structure for type safety
interface FaqItem {
  question: string;
  answer: string;
  category: string;
}

// Define categories in the desired order, add 'key' matching data category
const categories = [
  {
    id: 'general',
    key: 'General', // <<< Added key matching faq.category
    title: 'General Questions',
    iconSvg: `<svg class="w-6 h-6 text-primary-600 dark:text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>`
  },
  {
    id: 'pricing',
    key: 'Pricing', // <<< Added key
    title: 'Pricing & Investment',
    iconSvg: `<svg class="w-6 h-6 text-primary-600 dark:text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>`
  },
  {
    id: 'features',
    key: 'Features', // <<< Added key
    title: 'Features & Compatibility',
    iconSvg: `<svg class="w-6 h-6 text-primary-600 dark:text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"></path></svg>`
  },
  {
    id: 'security',
    key: 'Security', // <<< Added key
    title: 'Security & Privacy',
    iconSvg: `<svg class="w-6 h-6 text-primary-600 dark:text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"></path></svg>`
  },
  {
    id: 'support',
    key: 'Support', // <<< Added key
    title: 'Installation & Support',
    iconSvg: `<svg class="w-6 h-6 text-primary-600 dark:text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 5.636l-3.536 3.536m0 5.656l3.536 3.536M9.172 9.172L5.636 5.636m3.536 9.192l-3.536 3.536M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-5 0a4 4 0 11-8 0 4 4 0 018 0z"></path></svg>`
  },
];

// Group FAQs by their category key (e.g., "General", "Pricing")
const faqsByCategory = allFaqs.reduce((acc, faq) => {
  const categoryKey = faq.category || 'General'; // Use the key from the data
  if (!acc[categoryKey]) {
    acc[categoryKey] = [];
  }
  acc[categoryKey].push(faq);
  return acc;
}, {} as Record<string, FaqItem[]>);

// Function to render answer (simplified for debugging, potentially restore later)
// function renderAnswer(answer: string) { return answer; }

// OR Keep the previous function if links are needed and trusted:
function renderAnswer(answer: string) {
  const linkRegex = /<a href="([^"]+)" class="[^"]+">([^<]+)<\/a>/g;
  let result = '';
  let lastIndex = 0;
  let match;
  const escapeHtml = (unsafe: string) => { /* ... same escape function ... */ return unsafe.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;"); }
  while ((match = linkRegex.exec(answer)) !== null) {
    result += escapeHtml(answer.substring(lastIndex, match.index));
    result += `<a href="${match[1]}" class="text-primary-600 dark:text-primary-400 hover:underline">${escapeHtml(match[2])}</a>`;
    lastIndex = linkRegex.lastIndex;
  }
  result += escapeHtml(answer.substring(lastIndex));
  return result;
}

---

<Layout title="Frequently Asked Questions - Fosslink">
  <Header />
  <main>
    {/* Use HeroSection Component or standard section */}
    <HeroSection
      title="Frequently Asked Questions"
      highlightText="Questions"
      description="Find answers to common questions about Fosslink home automation and our services."
    />

    <section class="py-16 bg-white dark:bg-gray-800">
      <div class="container-custom mx-auto px-4">
        <div class="max-w-4xl mx-auto">
          {/* FAQ Categories Navigation - Links use category id */}
          <div class="flex flex-wrap justify-center gap-4 mb-12">
             {/* Loop uses category.title for display */}
            {categories.map((category, index) => (
              <a
                href={`#${category.id}`}
                class:list={[/* ... same classes ... */
                  "px-4 py-2 rounded-full font-medium text-sm transition-colors",
                  index === 0
                    ? "bg-primary-100 dark:bg-primary-900 text-primary-600 dark:text-primary-400 hover:bg-primary-200 dark:hover:bg-primary-800"
                    : "bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600"
                ]}
              >
                {category.title}
              </a>
            ))}
          </div>

          {/* Dynamically Generated FAQ Sections */}
          {categories.map(category => {
            // <<< Use category.key for lookup now >>>
            const currentCategoryFaqs = faqsByCategory[category.key];
            // Check if there are FAQs for this category key
            return currentCategoryFaqs && currentCategoryFaqs.length > 0 && (
              <div id={category.id} class="mb-16 scroll-mt-20">
                <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-8 flex items-center">
                  <span class="inline-block rounded-full bg-primary-100 dark:bg-primary-900 p-2 mr-3">
                    <Fragment set:html={category.iconSvg} />
                  </span>
                  {category.title} {/* Display the title */}
                </h2>
                <div class="space-y-6">
                  {/* Map over FAQs for the current category key */}
                  {currentCategoryFaqs.map((faq: FaqItem) => (
                    <div class="card p-6 border border-gray-200 dark:border-gray-700 rounded-lg bg-white dark:bg-secondary-900 shadow-sm">
                      <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-3">{faq.question}</h3>
                      <p class="text-gray-600 dark:text-gray-300" set:html={renderAnswer(faq.answer)} />
                      {/* OR for plain text: <p class="text-gray-600 dark:text-gray-300">{faq.answer}</p> */}
                    </div>
                  ))}
                </div>
              </div>
            );
          })}


          {/* Final CTA */}
          <div class="text-center mt-16">
            <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-4">Still have questions?</h3>
            <p class="text-gray-600 dark:text-gray-300 mb-8">
              Our team is ready to help. Contact us for any further inquiries about Fosslink home automation.
            </p>
            <a href="/contact" class="btn-primary">Contact Support</a> {/* Ensure btn-primary style is defined */}
          </div>

        </div>
      </div>
    </section>
  </main>
  <Footer />
</Layout>